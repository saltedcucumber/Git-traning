# Логи будут прилетать из beats'ов по порту 5044
input {
  beats {
    port => 5044
  }
}

filter {
 if "filebeat" in [message] {
  drop {}
 }
 else if "test" in [agent][name]{
   dissect { mapping => { "message" => "%{time_marker}.%{time_marker_msec} %{proxy_type}.%{proxy_port} %{error_code} %{user_name} %{client_ip} %{server_ip} %{bites_send} %{bites_recd} %{hop_number} %{net_info}"}}
 }
}
#   mutate { 
#     add_field => {"find" => "find %{name_of_host}" }
#   }
#  if [syslog]{
#    json {
#      source => ""
#      add_field => { "message" => "%{massage.}" }
#      add_field => { "test_%{message}" => "%{massage.massage.@timestamp}"}
#      add_field => ["test_field_timestamp","%{@timestamp"}]
#      add_field => {"test_field_metadata" => "@metadata"}
#    }
#  }
#
#}

#  if [type] == "syslog" {
#    grok {
#      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
#      add_field => [ "received_at", "%{@timestamp}" ]
#      add_field => [ "received_from", "%{host}" ]
#    }
#    date {
#      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
#    }
#  }
#}


output {
# Отображаем лог в stdout (поиграйтесь и удалите данную строку)
#  stdout {}
  # Пушим лог в elasticsearch, индекс будет создан автоматически по названию сервиса и текущей дате
    if "test" in [agent][name] {
      elasticsearch {    
         hosts => "elasticsearch:9200"
         index => "3proxy-%{+YYYY.MM.DD}"
         user => "elastic"
         password => "elk"
      }
    }
    else if "/var/lib/docker/" in [log][file][path] {
     elasticsearch {
         hosts => "elasticsearch:9200"
         index => "docker-%{+YYYY.MM.DD}"
         user => "elastic"
         password => "elk"
     }
    }
    else {
      elasticsearch {
        hosts => "elasticsearch:9200"
        index => "filebaet-%{+YYYY.MM.DD}"
        user => "elastic"
        password => "elk"
      }
    }  
}
